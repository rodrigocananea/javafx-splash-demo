{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Meu nome \u00e9 Samuel Oliveira, sou desenvolvedor Java a 7 Anos e atualmente trabalho como Gerente de Projetos em uma Software House. Trabalho com NFE desde 2012 e criei o Java-Nfe com o objetivo de ajudar a comunidade no envio e gera\u00e7\u00e3o da Nota fiscal Eletr\u00f4nica. Agora Crio o Java-Cte/MDFe com o mesmo Objetivo. API Java para consumo do WebService de CTe D\u00favidas, Sugest\u00f5es ou Consultoria Entre no Discord do Projeto: https://discord.gg/ZXpqnaV Gostou do Projeto? D\u00ea sua colabora\u00e7\u00e3o pelo Pix: 01713390108 Para Iniciar : - Caso use Libs baixe o java-cte-3.00.8.jar e o adicione \u00e0s bibliotecas de Seu Projeto. Baixe o Schemas.rar e extraia na sua M\u00e1quina. Maven : <dependency> <groupId> br.com.swconsultoria </groupId> <artifactId> java-cte </artifactId> <version> 3.00.8 </version> </dependency> Gradle : repositories { maven { url = \"https://oss.sonatype.org/content/repositories/snapshots\" } } dependencies { implementation \"br.com.swconsultoria:java-cte:3.00.8\" } Veja a Wiki https://github.com/Samuel-Oliveira/Java_CTe/wiki, para ter um Tutorial Completo. Historico de Vers\u00f5es v3.00.8 - SNAPSHOT - 15/01/2022 Atualizado Dependencia Java-Certificado Corrigido erro NS1 para MT Corrigido erro NS1 para MS Corrigido erro de assinatura para Certificados com Repositorio v3.00.7 - 01-04-2021 Removido Cacert do Projeto, agora o projeto Java Certificados ir\u00e1 gerenciar os Cacerts. Adicionado Retorno de Cte OS Melhoria nos Logs Atualizado Dependencia Java-Certificado v3.00.6 - 27-04-2020 Refatora\u00e7\u00e3o de Classes Adicionado QRCode Atualizado para vers\u00e3o 3.00a Corre\u00e7\u00e3o de Inutiliza\u00e7\u00e3o Corrigido Erros WSDL MS v3.00.5 - 17-07-2019 Removido Endere\u00e7os vers\u00e3o 2.00 Limpeza de Classes Adicionado WSDL CTe-OS Corrigido Chamadas para CTe-OS Adiciona Url WebServices Cte-OS v3.00.4 - 22-01-2019 Adicionado Mais convers\u00f5es Object->String Atualizado Cacert Atualizado biblioteca de certificados Melhoria no Nome de Classes. Corrigido erros Nas COnfigura\u00e7\u00f5es Web Adicionado Todos os Schemas e WSDL Adicionado ao Maven Central v3.00.3 - 27-08-2018 Implementado Padr\u00e3o Web v3.00.2 - 07-12-2017 Atualizado Cacert Corrigido Erro Namespace PR v3.00.1 - 07-11-2017 Atualizado Cacert Corrigido conflito com Nfe Atualizado para rodar somente com Vers\u00e3o 3.00 Removido CTe Para Outro Projeto Atualizado Layout e Melhorias de velocidade. v2.00.1 - 25-09-2017 Adicionado Cacert Atual Adicionado Valida\u00e7\u00e3o Para Modal Rodoviario Adicionado DistDfe Atualizado Metodo De verifica\u00e7\u00e3o do Certificado Adicionado JavaDocs Removido a Parte de Certificado Digitais para outro Projeto. Adicionado MDfe ao Projeto Altera\u00e7\u00f5es: 'ConfiguracoesIniciaisCte' para 'ConfiguracoesIniciais' 'ConstantesUtil' para 'ConstantesCte' 'CteException' para 'EmissorException' 'VersaoCte' para 'Versao' 'ObjectToXml' para 'ObjectCteToXml' Aten\u00e7\u00e3o: Alterado o caminho do Objeto Certificado, refa\u00e7a os Imports. v2.00.0 - 17-02-2017 Vers\u00e3o Inicial Do Sistema","title":"Inicio"},{"location":"#duvidas-sugestoes-ou-consultoria","text":"","title":"D\u00favidas, Sugest\u00f5es ou Consultoria"},{"location":"#entre-no-discord-do-projeto-httpsdiscordggzxpqnav","text":"","title":"Entre no Discord do Projeto: https://discord.gg/ZXpqnaV"},{"location":"#gostou-do-projeto-de-sua-colaboracao-pelo-pix-01713390108","text":"Para Iniciar : - Caso use Libs baixe o java-cte-3.00.8.jar e o adicione \u00e0s bibliotecas de Seu Projeto. Baixe o Schemas.rar e extraia na sua M\u00e1quina. Maven : <dependency> <groupId> br.com.swconsultoria </groupId> <artifactId> java-cte </artifactId> <version> 3.00.8 </version> </dependency> Gradle : repositories { maven { url = \"https://oss.sonatype.org/content/repositories/snapshots\" } } dependencies { implementation \"br.com.swconsultoria:java-cte:3.00.8\" } Veja a Wiki https://github.com/Samuel-Oliveira/Java_CTe/wiki, para ter um Tutorial Completo.","title":"Gostou do Projeto? D\u00ea sua colabora\u00e7\u00e3o pelo Pix: 01713390108"},{"location":"#historico-de-versoes","text":"","title":"Historico de Vers\u00f5es"},{"location":"#v3008-snapshot-15012022","text":"Atualizado Dependencia Java-Certificado Corrigido erro NS1 para MT Corrigido erro NS1 para MS Corrigido erro de assinatura para Certificados com Repositorio","title":"v3.00.8 - SNAPSHOT - 15/01/2022"},{"location":"#v3007-01-04-2021","text":"Removido Cacert do Projeto, agora o projeto Java Certificados ir\u00e1 gerenciar os Cacerts. Adicionado Retorno de Cte OS Melhoria nos Logs Atualizado Dependencia Java-Certificado","title":"v3.00.7 - 01-04-2021"},{"location":"#v3006-27-04-2020","text":"Refatora\u00e7\u00e3o de Classes Adicionado QRCode Atualizado para vers\u00e3o 3.00a Corre\u00e7\u00e3o de Inutiliza\u00e7\u00e3o Corrigido Erros WSDL MS","title":"v3.00.6 - 27-04-2020"},{"location":"#v3005-17-07-2019","text":"Removido Endere\u00e7os vers\u00e3o 2.00 Limpeza de Classes Adicionado WSDL CTe-OS Corrigido Chamadas para CTe-OS Adiciona Url WebServices Cte-OS","title":"v3.00.5 - 17-07-2019"},{"location":"#v3004-22-01-2019","text":"Adicionado Mais convers\u00f5es Object->String Atualizado Cacert Atualizado biblioteca de certificados Melhoria no Nome de Classes. Corrigido erros Nas COnfigura\u00e7\u00f5es Web Adicionado Todos os Schemas e WSDL Adicionado ao Maven Central","title":"v3.00.4 - 22-01-2019"},{"location":"#v3003-27-08-2018","text":"Implementado Padr\u00e3o Web","title":"v3.00.3 - 27-08-2018"},{"location":"#v3002-07-12-2017","text":"Atualizado Cacert Corrigido Erro Namespace PR","title":"v3.00.2 - 07-12-2017"},{"location":"#v3001-07-11-2017","text":"Atualizado Cacert Corrigido conflito com Nfe Atualizado para rodar somente com Vers\u00e3o 3.00 Removido CTe Para Outro Projeto Atualizado Layout e Melhorias de velocidade.","title":"v3.00.1 - 07-11-2017"},{"location":"#v2001-25-09-2017","text":"Adicionado Cacert Atual Adicionado Valida\u00e7\u00e3o Para Modal Rodoviario Adicionado DistDfe Atualizado Metodo De verifica\u00e7\u00e3o do Certificado Adicionado JavaDocs Removido a Parte de Certificado Digitais para outro Projeto. Adicionado MDfe ao Projeto Altera\u00e7\u00f5es: 'ConfiguracoesIniciaisCte' para 'ConfiguracoesIniciais' 'ConstantesUtil' para 'ConstantesCte' 'CteException' para 'EmissorException' 'VersaoCte' para 'Versao' 'ObjectToXml' para 'ObjectCteToXml' Aten\u00e7\u00e3o: Alterado o caminho do Objeto Certificado, refa\u00e7a os Imports.","title":"v2.00.1 - 25-09-2017"},{"location":"#v2000-17-02-2017","text":"Vers\u00e3o Inicial Do Sistema","title":"v2.00.0 - 17-02-2017"},{"location":"about-mkdocs/","text":"About MkDocs What is MkDocs? The description on the MkDocs site is: Project documentation with Markdown. MkDocs is a Python tool that generates a static site based on content written in Markdown. If you are new to markdown, see the Getting Started page on the Markdown Guide website. Resources mkdocs.org homepage mkdocs/mkdocs MkDocs Wiki - covering themes, plugins, recipes and more. Release notes for MkDocs. Reasons to use MkDocs Create an elegant, modern docs site for your project. Create a static site and serve from GitHub Pages easily. Low-code solution No need to write HTML or learn templating syntax needed Use your existing markdown files as content. Configure with a simple YAML file. Customizable. Add custom HTML if you want. Plugins available. Flexible theme choices. Includes search by default. Broken links to files (including from your navbar) will be detected at build time and shown as warnings. Do I need to know Python? MkDocs is built in Python (like Sphinx), but you don't have to write Python code. If you set up a Deploy flow right, you don't even have to set it up locally, though then you can't preview.","title":"About MkDocs"},{"location":"about-mkdocs/#about-mkdocs","text":"","title":"About MkDocs"},{"location":"about-mkdocs/#what-is-mkdocs","text":"The description on the MkDocs site is: Project documentation with Markdown. MkDocs is a Python tool that generates a static site based on content written in Markdown. If you are new to markdown, see the Getting Started page on the Markdown Guide website.","title":"What is MkDocs?"},{"location":"about-mkdocs/#resources","text":"mkdocs.org homepage mkdocs/mkdocs MkDocs Wiki - covering themes, plugins, recipes and more. Release notes for MkDocs.","title":"Resources"},{"location":"about-mkdocs/#reasons-to-use-mkdocs","text":"Create an elegant, modern docs site for your project. Create a static site and serve from GitHub Pages easily. Low-code solution No need to write HTML or learn templating syntax needed Use your existing markdown files as content. Configure with a simple YAML file. Customizable. Add custom HTML if you want. Plugins available. Flexible theme choices. Includes search by default. Broken links to files (including from your navbar) will be detected at build time and shown as warnings.","title":"Reasons to use MkDocs"},{"location":"about-mkdocs/#do-i-need-to-know-python","text":"MkDocs is built in Python (like Sphinx), but you don't have to write Python code. If you set up a Deploy flow right, you don't even have to set it up locally, though then you can't preview.","title":"Do I need to know Python?"},{"location":"tutorial/baixar-documento/","text":"Baixar CTe Fun\u00e7\u00e3o para fazer a Consulta e download de Cte. DistDfeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.retdistdfeint.RetDistDFeInt ; import java.io.IOException ; import java.util.List ; /** * @author Samuel Oliveira */ public class DistDfeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String cnpj = \"\" ; // TODO Preencher Cnpj String nsu = \"000000000000000\" ; // TODO Preencher Nsu RetDistDFeInt retorno = Cte . distribuicaoDfe ( ConstantesCte . TIPOS . CNPJ , cnpj , nsu ); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Max NSU:\" + retorno . getMaxNSU ()); System . out . println ( \"Ult NSU:\" + retorno . getUltNSU ()); if ( StatusEnum . DOC_LOCALIZADO_PARA_DESTINATARIO . equals ( retorno . getCStat ())) { List < RetDistDFeInt . LoteDistDFeInt . DocZip > listaDoc = retorno . getLoteDistDFeInt (). getDocZip (); System . out . println ( \"Encontrado \" + listaDoc . size () + \" Notas.\" ); for ( RetDistDFeInt . LoteDistDFeInt . DocZip docZip : listaDoc ) { System . out . println ( \"Schema: \" + docZip . getSchema ()); System . out . println ( \"NSU:\" + docZip . getNSU ()); System . out . println ( \"XML: \" + XmlUtil . gZipToXml ( docZip . getValue ())); } } } catch ( CteException | CertificadoException | IOException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Baixar Documento"},{"location":"tutorial/baixar-documento/#baixar-cte","text":"Fun\u00e7\u00e3o para fazer a Consulta e download de Cte. DistDfeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.retdistdfeint.RetDistDFeInt ; import java.io.IOException ; import java.util.List ; /** * @author Samuel Oliveira */ public class DistDfeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String cnpj = \"\" ; // TODO Preencher Cnpj String nsu = \"000000000000000\" ; // TODO Preencher Nsu RetDistDFeInt retorno = Cte . distribuicaoDfe ( ConstantesCte . TIPOS . CNPJ , cnpj , nsu ); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Max NSU:\" + retorno . getMaxNSU ()); System . out . println ( \"Ult NSU:\" + retorno . getUltNSU ()); if ( StatusEnum . DOC_LOCALIZADO_PARA_DESTINATARIO . equals ( retorno . getCStat ())) { List < RetDistDFeInt . LoteDistDFeInt . DocZip > listaDoc = retorno . getLoteDistDFeInt (). getDocZip (); System . out . println ( \"Encontrado \" + listaDoc . size () + \" Notas.\" ); for ( RetDistDFeInt . LoteDistDFeInt . DocZip docZip : listaDoc ) { System . out . println ( \"Schema: \" + docZip . getSchema ()); System . out . println ( \"NSU:\" + docZip . getNSU ()); System . out . println ( \"XML: \" + XmlUtil . gZipToXml ( docZip . getValue ())); } } } catch ( CteException | CertificadoException | IOException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Baixar CTe"},{"location":"tutorial/cancelamento/","text":"Cancelamento Exemplo de Como Ficaria o Cancelamento da CT-e. CancelarCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.ObjetoUtil ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.EvCancCTe ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TEvento ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TProcEvento ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TRetEvento ; import javax.xml.bind.JAXBException ; import java.time.LocalDateTime ; /** * @author Samuel Oliveira * */ public class CancelarCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String chave = \"\" ; // TODO Preencha a Chave String protocolo = \"\" ; // TODO Preencha o Protocolo String cnpj = \"\" ; // TODO Preencha o Cnpj String numeroSeqCancelamento = \"01\" ; // TODO Preencha String id = \"ID\" + ConstantesCte . EVENTOS . CANCELAMENTO_COD + chave + numeroSeqCancelamento ; String justificativa = \"Teste de Cancelmento\" ; // TODO Preencha TEvento enviEvento = new TEvento (); enviEvento . setVersao ( config . getVersao ()); TEvento . InfEvento infoEvento = new TEvento . InfEvento (); infoEvento . setId ( id ); infoEvento . setCOrgao ( config . getEstado (). getCodigoIbge ()); infoEvento . setTpAmb ( config . getAmbiente ()); infoEvento . setCNPJ ( cnpj ); infoEvento . setChCTe ( chave ); infoEvento . setDhEvento ( XmlUtil . dataCte ( LocalDateTime . now ())); infoEvento . setTpEvento ( ConstantesCte . EVENTOS . CANCELAMENTO_COD ); infoEvento . setNSeqEvento ( Integer . valueOf ( numeroSeqCancelamento ). toString ()); EvCancCTe eventoCancela = new EvCancCTe (); eventoCancela . setDescEvento ( ConstantesCte . EVENTOS . CANCELAMENTO_DESC ); eventoCancela . setNProt ( protocolo ); eventoCancela . setXJust ( justificativa ); TEvento . InfEvento . DetEvento detEvento = new TEvento . InfEvento . DetEvento (); detEvento . setVersaoEvento ( config . getVersao ()); detEvento . setAny ( ObjetoUtil . objectToElement ( eventoCancela , EvCancCTe . class , \"evCancCTe\" )); infoEvento . setDetEvento ( detEvento ); enviEvento . setInfEvento ( infoEvento ); TRetEvento retorno = Cte . cancelarCte ( enviEvento , true ); if ( ! retorno . getInfEvento (). getCStat (). equals ( StatusEnum . EVENTO_VINCULADO . getCode ())){ System . out . println ( \"Erro Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Erro Motivo:\" + retorno . getInfEvento (). getXMotivo ()); } else { System . out . println ( \"Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Motivo:\" + retorno . getInfEvento (). getXMotivo ()); System . out . println ( \"Data:\" + retorno . getInfEvento (). getDhRegEvento ()); // Cria TProcEventoCTe TProcEvento procEvento = new TProcEvento (); procEvento . setVersao ( config . getVersao ()); procEvento . setEventoCTe ( enviEvento ); procEvento . setRetEventoCTe ( retorno ); System . out . println ( \"Xml Final Cancelamento Proc: \" + XmlUtil . objectCteToXml ( procEvento )); } } catch ( CteException | JAXBException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Cancelamento"},{"location":"tutorial/cancelamento/#cancelamento","text":"Exemplo de Como Ficaria o Cancelamento da CT-e. CancelarCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.ObjetoUtil ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.EvCancCTe ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TEvento ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TProcEvento ; import br.inf.portalfiscal.cte.schema_300.evCancCTe.TRetEvento ; import javax.xml.bind.JAXBException ; import java.time.LocalDateTime ; /** * @author Samuel Oliveira * */ public class CancelarCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String chave = \"\" ; // TODO Preencha a Chave String protocolo = \"\" ; // TODO Preencha o Protocolo String cnpj = \"\" ; // TODO Preencha o Cnpj String numeroSeqCancelamento = \"01\" ; // TODO Preencha String id = \"ID\" + ConstantesCte . EVENTOS . CANCELAMENTO_COD + chave + numeroSeqCancelamento ; String justificativa = \"Teste de Cancelmento\" ; // TODO Preencha TEvento enviEvento = new TEvento (); enviEvento . setVersao ( config . getVersao ()); TEvento . InfEvento infoEvento = new TEvento . InfEvento (); infoEvento . setId ( id ); infoEvento . setCOrgao ( config . getEstado (). getCodigoIbge ()); infoEvento . setTpAmb ( config . getAmbiente ()); infoEvento . setCNPJ ( cnpj ); infoEvento . setChCTe ( chave ); infoEvento . setDhEvento ( XmlUtil . dataCte ( LocalDateTime . now ())); infoEvento . setTpEvento ( ConstantesCte . EVENTOS . CANCELAMENTO_COD ); infoEvento . setNSeqEvento ( Integer . valueOf ( numeroSeqCancelamento ). toString ()); EvCancCTe eventoCancela = new EvCancCTe (); eventoCancela . setDescEvento ( ConstantesCte . EVENTOS . CANCELAMENTO_DESC ); eventoCancela . setNProt ( protocolo ); eventoCancela . setXJust ( justificativa ); TEvento . InfEvento . DetEvento detEvento = new TEvento . InfEvento . DetEvento (); detEvento . setVersaoEvento ( config . getVersao ()); detEvento . setAny ( ObjetoUtil . objectToElement ( eventoCancela , EvCancCTe . class , \"evCancCTe\" )); infoEvento . setDetEvento ( detEvento ); enviEvento . setInfEvento ( infoEvento ); TRetEvento retorno = Cte . cancelarCte ( enviEvento , true ); if ( ! retorno . getInfEvento (). getCStat (). equals ( StatusEnum . EVENTO_VINCULADO . getCode ())){ System . out . println ( \"Erro Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Erro Motivo:\" + retorno . getInfEvento (). getXMotivo ()); } else { System . out . println ( \"Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Motivo:\" + retorno . getInfEvento (). getXMotivo ()); System . out . println ( \"Data:\" + retorno . getInfEvento (). getDhRegEvento ()); // Cria TProcEventoCTe TProcEvento procEvento = new TProcEvento (); procEvento . setVersao ( config . getVersao ()); procEvento . setEventoCTe ( enviEvento ); procEvento . setRetEventoCTe ( retorno ); System . out . println ( \"Xml Final Cancelamento Proc: \" + XmlUtil . objectCteToXml ( procEvento )); } } catch ( CteException | JAXBException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Cancelamento"},{"location":"tutorial/carta-correcao/","text":"Carta de Corre\u00e7\u00e3o Eletr\u00f4nica Fun\u00e7\u00e3o para Gerar a Carta De Corre\u00e7\u00e3o Eletr\u00f4nica. CCeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.ObjetoUtil ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.EvCCeCTe ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TEvento ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TProcEvento ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TRetEvento ; import javax.xml.bind.JAXBException ; import java.time.LocalDateTime ; /** * @author Samuel Oliveira */ public class CCeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String chave = \"\" ; // TODO Preencha a Chave String numeroSeqEvento = \"01\" ; // TODO Preencha o NUmero Sequencial com 2 Digitos e Zero a esquerda String id = \"ID\" + ConstantesCte . EVENTOS . CCE_COD + chave + numeroSeqEvento ; String cnpj = \"\" ; // TODO Preencha o Cnpj TEvento enviEvento = new TEvento (); enviEvento . setVersao ( config . getVersao ()); TEvento . InfEvento infoEvento = new TEvento . InfEvento (); infoEvento . setId ( id ); infoEvento . setCOrgao ( config . getEstado (). getCodigoIbge ()); infoEvento . setTpAmb ( config . getAmbiente ()); infoEvento . setCNPJ ( cnpj ); infoEvento . setChCTe ( chave ); infoEvento . setDhEvento ( XmlUtil . dataCte ( LocalDateTime . now ())); infoEvento . setTpEvento ( ConstantesCte . EVENTOS . CCE_COD ); infoEvento . setNSeqEvento ( Integer . valueOf ( numeroSeqEvento ). toString ()); EvCCeCTe eventoCCe = new EvCCeCTe (); eventoCCe . setDescEvento ( ConstantesCte . EVENTOS . CCE_DESC ); eventoCCe . setXCondUso ( ConstantesCte . EVENTOS . CCE_COND_USO ); EvCCeCTe . InfCorrecao infCorrecao = new EvCCeCTe . InfCorrecao (); infCorrecao . setGrupoAlterado ( \"enderReme\" ); // TODO Preencha infCorrecao . setCampoAlterado ( \"nro\" ); // TODO Preencha infCorrecao . setValorAlterado ( \"1234\" ); // TODO Preencha eventoCCe . getInfCorrecao (). add ( infCorrecao ); TEvento . InfEvento . DetEvento detEvento = new TEvento . InfEvento . DetEvento (); detEvento . setVersaoEvento ( config . getVersao ()); detEvento . setAny ( ObjetoUtil . objectToElement ( eventoCCe , EvCCeCTe . class , \"evCCeCTe\" )); infoEvento . setDetEvento ( detEvento ); enviEvento . setInfEvento ( infoEvento ); TRetEvento retorno = Cte . cceCte ( enviEvento , true ); if ( ! retorno . getInfEvento (). getCStat (). equals ( StatusEnum . EVENTO_VINCULADO . getCode ())) { System . out . println ( \"Erro Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Erro Motivo:\" + retorno . getInfEvento (). getXMotivo ()); } else { System . out . println ( \"Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Motivo:\" + retorno . getInfEvento (). getXMotivo ()); System . out . println ( \"Data:\" + retorno . getInfEvento (). getDhRegEvento ()); // Cria TProcEventoCTe TProcEvento procEvento = new TProcEvento (); procEvento . setVersao ( config . getVersao ()); procEvento . setEventoCTe ( enviEvento ); procEvento . setRetEventoCTe ( retorno ); System . out . println ( \"Xml Final Carta de Corre\u00e7\u00e3o Proc: \" + XmlUtil . objectCteToXml ( procEvento )); } } catch ( CteException | JAXBException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Carta de Corre\u00e7\u00e3o Eletr\u00f4nica"},{"location":"tutorial/carta-correcao/#carta-de-correcao-eletronica","text":"Fun\u00e7\u00e3o para Gerar a Carta De Corre\u00e7\u00e3o Eletr\u00f4nica. CCeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.ObjetoUtil ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.EvCCeCTe ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TEvento ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TProcEvento ; import br.inf.portalfiscal.cte.schema_300.evCCeCTe.TRetEvento ; import javax.xml.bind.JAXBException ; import java.time.LocalDateTime ; /** * @author Samuel Oliveira */ public class CCeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String chave = \"\" ; // TODO Preencha a Chave String numeroSeqEvento = \"01\" ; // TODO Preencha o NUmero Sequencial com 2 Digitos e Zero a esquerda String id = \"ID\" + ConstantesCte . EVENTOS . CCE_COD + chave + numeroSeqEvento ; String cnpj = \"\" ; // TODO Preencha o Cnpj TEvento enviEvento = new TEvento (); enviEvento . setVersao ( config . getVersao ()); TEvento . InfEvento infoEvento = new TEvento . InfEvento (); infoEvento . setId ( id ); infoEvento . setCOrgao ( config . getEstado (). getCodigoIbge ()); infoEvento . setTpAmb ( config . getAmbiente ()); infoEvento . setCNPJ ( cnpj ); infoEvento . setChCTe ( chave ); infoEvento . setDhEvento ( XmlUtil . dataCte ( LocalDateTime . now ())); infoEvento . setTpEvento ( ConstantesCte . EVENTOS . CCE_COD ); infoEvento . setNSeqEvento ( Integer . valueOf ( numeroSeqEvento ). toString ()); EvCCeCTe eventoCCe = new EvCCeCTe (); eventoCCe . setDescEvento ( ConstantesCte . EVENTOS . CCE_DESC ); eventoCCe . setXCondUso ( ConstantesCte . EVENTOS . CCE_COND_USO ); EvCCeCTe . InfCorrecao infCorrecao = new EvCCeCTe . InfCorrecao (); infCorrecao . setGrupoAlterado ( \"enderReme\" ); // TODO Preencha infCorrecao . setCampoAlterado ( \"nro\" ); // TODO Preencha infCorrecao . setValorAlterado ( \"1234\" ); // TODO Preencha eventoCCe . getInfCorrecao (). add ( infCorrecao ); TEvento . InfEvento . DetEvento detEvento = new TEvento . InfEvento . DetEvento (); detEvento . setVersaoEvento ( config . getVersao ()); detEvento . setAny ( ObjetoUtil . objectToElement ( eventoCCe , EvCCeCTe . class , \"evCCeCTe\" )); infoEvento . setDetEvento ( detEvento ); enviEvento . setInfEvento ( infoEvento ); TRetEvento retorno = Cte . cceCte ( enviEvento , true ); if ( ! retorno . getInfEvento (). getCStat (). equals ( StatusEnum . EVENTO_VINCULADO . getCode ())) { System . out . println ( \"Erro Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Erro Motivo:\" + retorno . getInfEvento (). getXMotivo ()); } else { System . out . println ( \"Status:\" + retorno . getInfEvento (). getCStat ()); System . out . println ( \"Motivo:\" + retorno . getInfEvento (). getXMotivo ()); System . out . println ( \"Data:\" + retorno . getInfEvento (). getDhRegEvento ()); // Cria TProcEventoCTe TProcEvento procEvento = new TProcEvento (); procEvento . setVersao ( config . getVersao ()); procEvento . setEventoCTe ( enviEvento ); procEvento . setRetEventoCTe ( retorno ); System . out . println ( \"Xml Final Carta de Corre\u00e7\u00e3o Proc: \" + XmlUtil . objectCteToXml ( procEvento )); } } catch ( CteException | JAXBException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Carta de Corre\u00e7\u00e3o Eletr\u00f4nica"},{"location":"tutorial/configuracoes/","text":"Configura\u00e7\u00f5es Para executar qualquer fun\u00e7\u00e3o CTe, deve-se inicializar as Configura\u00e7\u00e3o. Certificado Digital StatusCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.inf.portalfiscal.cte.schema_300.retConsStatServCTe.TRetConsStatServ ; /** * @author Samuel Oliveira */ public class StatusCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); TRetConsStatServ retorno = Cte . statusServico (); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Data:\" + retorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Configura\u00e7\u00f5es (certificado)"},{"location":"tutorial/configuracoes/#configuracoes","text":"Para executar qualquer fun\u00e7\u00e3o CTe, deve-se inicializar as Configura\u00e7\u00e3o.","title":"Configura\u00e7\u00f5es"},{"location":"tutorial/configuracoes/#certificado-digital","text":"StatusCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.inf.portalfiscal.cte.schema_300.retConsStatServCTe.TRetConsStatServ ; /** * @author Samuel Oliveira */ public class StatusCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); TRetConsStatServ retorno = Cte . statusServico (); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Data:\" + retorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Certificado Digital"},{"location":"tutorial/consulta-situacao/","text":"Consulta Situa\u00e7\u00e3o Fun\u00e7\u00e3o para fazer a Consulta e download de Cte. DistDfeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.retdistdfeint.RetDistDFeInt ; import java.io.IOException ; import java.util.List ; /** * @author Samuel Oliveira */ public class DistDfeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String cnpj = \"\" ; // TODO Preencher Cnpj String nsu = \"000000000000000\" ; // TODO Preencher Nsu RetDistDFeInt retorno = Cte . distribuicaoDfe ( ConstantesCte . TIPOS . CNPJ , cnpj , nsu ); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Max NSU:\" + retorno . getMaxNSU ()); System . out . println ( \"Ult NSU:\" + retorno . getUltNSU ()); if ( StatusEnum . DOC_LOCALIZADO_PARA_DESTINATARIO . equals ( retorno . getCStat ())) { List < RetDistDFeInt . LoteDistDFeInt . DocZip > listaDoc = retorno . getLoteDistDFeInt (). getDocZip (); System . out . println ( \"Encontrado \" + listaDoc . size () + \" Notas.\" ); for ( RetDistDFeInt . LoteDistDFeInt . DocZip docZip : listaDoc ) { System . out . println ( \"Schema: \" + docZip . getSchema ()); System . out . println ( \"NSU:\" + docZip . getNSU ()); System . out . println ( \"XML: \" + XmlUtil . gZipToXml ( docZip . getValue ())); } } } catch ( CteException | CertificadoException | IOException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Consulta Situa\u00e7\u00e3o"},{"location":"tutorial/consulta-situacao/#consulta-situacao","text":"Fun\u00e7\u00e3o para fazer a Consulta e download de Cte. DistDfeCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.dom.StatusEnum ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.com.samuelweb.cte.util.XmlUtil ; import br.inf.portalfiscal.cte.schema_300.retdistdfeint.RetDistDFeInt ; import java.io.IOException ; import java.util.List ; /** * @author Samuel Oliveira */ public class DistDfeCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String cnpj = \"\" ; // TODO Preencher Cnpj String nsu = \"000000000000000\" ; // TODO Preencher Nsu RetDistDFeInt retorno = Cte . distribuicaoDfe ( ConstantesCte . TIPOS . CNPJ , cnpj , nsu ); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Max NSU:\" + retorno . getMaxNSU ()); System . out . println ( \"Ult NSU:\" + retorno . getUltNSU ()); if ( StatusEnum . DOC_LOCALIZADO_PARA_DESTINATARIO . equals ( retorno . getCStat ())) { List < RetDistDFeInt . LoteDistDFeInt . DocZip > listaDoc = retorno . getLoteDistDFeInt (). getDocZip (); System . out . println ( \"Encontrado \" + listaDoc . size () + \" Notas.\" ); for ( RetDistDFeInt . LoteDistDFeInt . DocZip docZip : listaDoc ) { System . out . println ( \"Schema: \" + docZip . getSchema ()); System . out . println ( \"NSU:\" + docZip . getNSU ()); System . out . println ( \"XML: \" + XmlUtil . gZipToXml ( docZip . getValue ())); } } } catch ( CteException | CertificadoException | IOException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Consulta Situa\u00e7\u00e3o"},{"location":"tutorial/envio/","text":"Envio Exemplo de Como Ficaria o Envio da CT-e. EnvioCte.java package cte ; import br.com.swconsultoria.cte.Cte ; import br.com.swconsultoria.cte.dom.ConfiguracoesCte ; import br.com.swconsultoria.cte.dom.enuns.AmbienteEnum ; import br.com.swconsultoria.cte.dom.enuns.EstadosEnum ; import br.com.swconsultoria.cte.dom.enuns.StatusCteEnum ; import br.com.swconsultoria.cte.exception.CteException ; import br.com.swconsultoria.cte.schema_300.cteModalRodoviario.Rodo ; import br.com.swconsultoria.cte.schema_300.enviCTe.TCTe ; import br.com.swconsultoria.cte.schema_300.enviCTe.TEnviCTe ; import br.com.swconsultoria.cte.schema_300.retEnviCTe.TRetEnviCTe ; import br.com.swconsultoria.cte.util.ChaveUtil ; import br.com.swconsultoria.cte.util.ConstantesCte ; import br.com.swconsultoria.cte.util.ObjetoCTeUtil ; import br.com.swconsultoria.cte.util.XmlCteUtil ; import java.time.LocalDateTime ; import java.util.Random ; /** * @author Samuel Oliveira */ public class EnvioCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesCte config = ConfigTeste . iniciaConfiguracoes ( EstadosEnum . GO , AmbienteEnum . HOMOLOGACAO ); String cnpj = \"10732644000128\" ; //TODO Preencha o Cnpj String modelo = \"57\" ; int serie = 1 ; int numero = 224 ; String tipoEmissao = \"1\" ; String cct = String . format ( \"%08d\" , new Random (). nextInt ( 99999999 )); // Inicia As Configura\u00e7\u00f5es TCTe cte = new TCTe (); TCTe . InfCte infCTe = new TCTe . InfCte (); // Substitua X Pela Chave ChaveUtil chaveUtil = new ChaveUtil ( config . getEstado (), cnpj , modelo , serie , numero , tipoEmissao , cct , LocalDateTime . now ()); String chave = chaveUtil . getChaveCT (); infCTe . setId ( chave ); infCTe . setVersao ( ConstantesCte . VERSAO . CTE ); TCTe . InfCte . Ide ide = new TCTe . InfCte . Ide (); ide . setCUF ( config . getEstado (). getCodigoUF ()); ide . setCCT ( cct ); ide . setCFOP ( \"5351\" ); ide . setNatOp ( \"TRANSPORTE INTERNO\" ); ide . setMod ( modelo ); ide . setSerie ( String . valueOf ( serie )); ide . setNCT ( String . valueOf ( numero )); ide . setDhEmi ( XmlCteUtil . dataCte ( LocalDateTime . now ())); ide . setTpImp ( \"1\" ); ide . setTpEmis ( tipoEmissao ); ide . setCDV ( chaveUtil . getDigitoVerificador ()); ide . setTpAmb ( config . getAmbiente (). getCodigo ()); ide . setTpCTe ( \"0\" ); ide . setProcEmi ( \"0\" ); ide . setVerProc ( \"1.0\" ); ide . setCMunEnv ( \"5219753\" ); ide . setXMunEnv ( \"Anapolis\" ); ide . setUFEnv ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setModal ( \"01\" ); ide . setTpServ ( \"0\" ); ide . setCMunIni ( \"5219753\" ); ide . setXMunIni ( \"Anapolis\" ); ide . setUFIni ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setCMunFim ( \"5219753\" ); ide . setXMunFim ( \"Anapolis\" ); ide . setUFFim ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setRetira ( \"1\" ); ide . setIndIEToma ( \"1\" ); TCTe . InfCte . Ide . Toma3 toma3 = new TCTe . InfCte . Ide . Toma3 (); toma3 . setToma ( \"3\" ); ide . setToma3 ( toma3 ); infCTe . setIde ( ide ); TCTe . InfCte . Compl compl = new TCTe . InfCte . Compl (); compl . setXObs ( \"FORMA DE PAGAMENTO DEPOSITO BANCARIO,FAVOR ENVIAR COPIA DO COMPROVANTE PARA O TRANSPORTADOR E ANEXAR VIA A DA CONTABILIDADE\" ); infCTe . setCompl ( compl ); TCTe . InfCte . Emit emit = new TCTe . InfCte . Emit (); emit . setCNPJ ( cnpj ); emit . setIE ( \"104519304\" ); emit . setXNome ( \"TRC TRANSPORTES LTDA\" ); emit . setXFant ( \"TRC TRANSPORTES LTDA\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndeEmi enderEmit = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndeEmi (); enderEmit . setXLgr ( \"AV SANTO ANTONIO & CIA\" ); enderEmit . setNro ( \"0\" ); enderEmit . setXCpl ( \"QD 17 LT 01-02-03\" ); enderEmit . setXBairro ( \"PQ STO ANTONIO\" ); enderEmit . setCMun ( \"5219753\" ); enderEmit . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderEmit . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUFSemEX . valueOf ( \"GO\" )); enderEmit . setCEP ( \"72900000\" ); enderEmit . setFone ( \"6233215175\" ); emit . setEnderEmit ( enderEmit ); infCTe . setEmit ( emit ); TCTe . InfCte . Rem rem = new TCTe . InfCte . Rem (); rem . setCNPJ ( \"01241994000605\" ); rem . setIE ( \"103255788\" ); rem . setXNome ( \"CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\" ); rem . setEmail ( \"samuel@autocomsistemas.com.br\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco enderRem = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco (); enderRem . setXLgr ( \"Rua: Teste\" ); enderRem . setNro ( \"0\" ); enderRem . setXBairro ( \"TESTE\" ); enderRem . setCMun ( \"5219753\" ); enderRem . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderRem . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . GO ); enderRem . setCEP ( \"75120683\" ); enderRem . setCPais ( \"1058\" ); enderRem . setXPais ( \"Brasil\" ); rem . setEnderReme ( enderRem ); infCTe . setRem ( rem ); TCTe . InfCte . Dest dest = new TCTe . InfCte . Dest (); dest . setCNPJ ( \"07826959000120\" ); dest . setIE ( \"104024585\" ); dest . setXNome ( \"CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\" ); dest . setEmail ( \"samuel@autocomsistemas.com.br\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco enderDest = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco (); enderDest . setXLgr ( \"Rua: Teste\" ); enderDest . setNro ( \"0\" ); enderDest . setXBairro ( \"TESTE\" ); enderDest . setCMun ( \"5219753\" ); enderDest . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderDest . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . GO ); enderDest . setCEP ( \"75120683\" ); enderDest . setCPais ( \"1058\" ); enderDest . setXPais ( \"Brasil\" ); dest . setEnderDest ( enderDest ); infCTe . setDest ( dest ); TCTe . InfCte . VPrest prest = new TCTe . InfCte . VPrest (); prest . setVTPrest ( \"410.00\" ); prest . setVRec ( \"410.00\" ); TCTe . InfCte . VPrest . Comp comp = new TCTe . InfCte . VPrest . Comp (); comp . setVComp ( \"500.00\" ); comp . setXNome ( \"TESTE\" ); prest . getComp (). add ( comp ); infCTe . setVPrest ( prest ); TCTe . InfCte . Imp imp = new TCTe . InfCte . Imp (); br . com . swconsultoria . cte . schema_300 . enviCTe . TImp icms = new br . com . swconsultoria . cte . schema_300 . enviCTe . TImp (); br . com . swconsultoria . cte . schema_300 . enviCTe . TImp . ICMS45 icms45 = new br . com . swconsultoria . cte . schema_300 . enviCTe . TImp . ICMS45 (); icms45 . setCST ( \"40\" ); icms . setICMS45 ( icms45 ); imp . setICMS ( icms ); infCTe . setImp ( imp ); TCTe . InfCte . InfCTeNorm infCTeNorm = new TCTe . InfCte . InfCTeNorm (); TCTe . InfCte . InfCTeNorm . InfCarga infCarga = new TCTe . InfCte . InfCTeNorm . InfCarga (); infCarga . setVCarga ( \"29100.00\" ); infCarga . setProPred ( \"OLEO DIESEL\" ); TCTe . InfCte . InfCTeNorm . InfCarga . InfQ infQ = new TCTe . InfCte . InfCTeNorm . InfCarga . InfQ (); infQ . setCUnid ( \"04\" ); infQ . setTpMed ( \"LT\" ); infQ . setQCarga ( \"10000.0000\" ); infCarga . getInfQ (). add ( infQ ); TCTe . InfCte . InfCTeNorm . InfDoc infDoc = new TCTe . InfCte . InfCTeNorm . InfDoc (); TCTe . InfCte . InfCTeNorm . InfDoc . InfNFe infNFe = new TCTe . InfCte . InfCTeNorm . InfDoc . InfNFe (); infNFe . setChave ( \"52170101241994000605550030002868271002045403\" ); infDoc . getInfNFe (). add ( infNFe ); TCTe . InfCte . InfCTeNorm . InfModal infModal = new TCTe . InfCte . InfCTeNorm . InfModal (); infModal . setVersaoModal ( ConstantesCte . VERSAO . CTE ); Rodo rodo = new Rodo (); rodo . setRNTRC ( \"47008950\" ); infModal . setAny ( ObjetoCTeUtil . objectToElement ( rodo , Rodo . class , \"rodo\" )); infCTeNorm . setInfCarga ( infCarga ); infCTeNorm . setInfDoc ( infDoc ); infCTeNorm . setInfModal ( infModal ); infCTe . setInfCTeNorm ( infCTeNorm ); // Monta EnviCte TEnviCTe enviCTe = new TEnviCTe (); enviCTe . setVersao ( ConstantesCte . VERSAO . CTE ); enviCTe . setIdLote ( \"1\" ); cte . setInfCte ( infCTe ); enviCTe . getCTe (). add ( cte ); // MOnta e Assina o XML enviCTe = Cte . montaCte ( config , enviCTe , true ); //Adiciona QRCode TCTe . InfCTeSupl infCTeSupl = new TCTe . InfCTeSupl (); infCTeSupl . setQrCodCTe ( ObjetoCTeUtil . criaQRCode ( cte . getInfCte (). getId (). substring ( 3 ), config )); enviCTe . getCTe (). get ( 0 ). setInfCTeSupl ( infCTeSupl ); // Envia a Cte para a Sefaz TRetEnviCTe retorno = Cte . enviarCte ( config , enviCTe ); if ( ! retorno . getCStat (). equals ( StatusCteEnum . LOTE_RECEBIDO . getCodigo ())) { throw new CteException ( \"Status:\" + retorno . getCStat () + \" - Motivo:\" + retorno . getXMotivo ()); } String recibo = retorno . getInfRec (). getNRec (); br . com . swconsultoria . cte . schema_300 . retConsReciCTe . TRetConsReciCTe retornoCte ; while ( true ) { retornoCte = Cte . consultaRecibo ( config , recibo ); if ( retornoCte . getCStat (). equals ( \"105\" )) { System . out . println ( \"Lote Em Processamento, vai tentar novamente apos 2 Segundo.\" ); Thread . sleep ( 2000 ); } else { break ; } } if ( ! retornoCte . getCStat (). equals ( StatusCteEnum . LOTE_PROCESSADO . getCodigo ())) { throw new CteException ( \"Status:\" + retornoCte . getCStat () + \" - \" + retornoCte . getXMotivo ()); } System . out . println ( \"Status: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getCStat () + \" - \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getXMotivo ()); System . out . println ( \"Data: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getDhRecbto ()); if ( retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getCStat (). equals ( StatusCteEnum . AUTORIZADO . getCodigo ())) { System . out . println ( \"Protocolo: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getNProt ()); System . out . println ( \"XML Final: \" + XmlCteUtil . criaCteProc ( enviCTe , retornoCte . getProtCTe (). get ( 0 ))); } } catch ( Exception e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Envio"},{"location":"tutorial/envio/#envio","text":"Exemplo de Como Ficaria o Envio da CT-e. EnvioCte.java package cte ; import br.com.swconsultoria.cte.Cte ; import br.com.swconsultoria.cte.dom.ConfiguracoesCte ; import br.com.swconsultoria.cte.dom.enuns.AmbienteEnum ; import br.com.swconsultoria.cte.dom.enuns.EstadosEnum ; import br.com.swconsultoria.cte.dom.enuns.StatusCteEnum ; import br.com.swconsultoria.cte.exception.CteException ; import br.com.swconsultoria.cte.schema_300.cteModalRodoviario.Rodo ; import br.com.swconsultoria.cte.schema_300.enviCTe.TCTe ; import br.com.swconsultoria.cte.schema_300.enviCTe.TEnviCTe ; import br.com.swconsultoria.cte.schema_300.retEnviCTe.TRetEnviCTe ; import br.com.swconsultoria.cte.util.ChaveUtil ; import br.com.swconsultoria.cte.util.ConstantesCte ; import br.com.swconsultoria.cte.util.ObjetoCTeUtil ; import br.com.swconsultoria.cte.util.XmlCteUtil ; import java.time.LocalDateTime ; import java.util.Random ; /** * @author Samuel Oliveira */ public class EnvioCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesCte config = ConfigTeste . iniciaConfiguracoes ( EstadosEnum . GO , AmbienteEnum . HOMOLOGACAO ); String cnpj = \"10732644000128\" ; //TODO Preencha o Cnpj String modelo = \"57\" ; int serie = 1 ; int numero = 224 ; String tipoEmissao = \"1\" ; String cct = String . format ( \"%08d\" , new Random (). nextInt ( 99999999 )); // Inicia As Configura\u00e7\u00f5es TCTe cte = new TCTe (); TCTe . InfCte infCTe = new TCTe . InfCte (); // Substitua X Pela Chave ChaveUtil chaveUtil = new ChaveUtil ( config . getEstado (), cnpj , modelo , serie , numero , tipoEmissao , cct , LocalDateTime . now ()); String chave = chaveUtil . getChaveCT (); infCTe . setId ( chave ); infCTe . setVersao ( ConstantesCte . VERSAO . CTE ); TCTe . InfCte . Ide ide = new TCTe . InfCte . Ide (); ide . setCUF ( config . getEstado (). getCodigoUF ()); ide . setCCT ( cct ); ide . setCFOP ( \"5351\" ); ide . setNatOp ( \"TRANSPORTE INTERNO\" ); ide . setMod ( modelo ); ide . setSerie ( String . valueOf ( serie )); ide . setNCT ( String . valueOf ( numero )); ide . setDhEmi ( XmlCteUtil . dataCte ( LocalDateTime . now ())); ide . setTpImp ( \"1\" ); ide . setTpEmis ( tipoEmissao ); ide . setCDV ( chaveUtil . getDigitoVerificador ()); ide . setTpAmb ( config . getAmbiente (). getCodigo ()); ide . setTpCTe ( \"0\" ); ide . setProcEmi ( \"0\" ); ide . setVerProc ( \"1.0\" ); ide . setCMunEnv ( \"5219753\" ); ide . setXMunEnv ( \"Anapolis\" ); ide . setUFEnv ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setModal ( \"01\" ); ide . setTpServ ( \"0\" ); ide . setCMunIni ( \"5219753\" ); ide . setXMunIni ( \"Anapolis\" ); ide . setUFIni ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setCMunFim ( \"5219753\" ); ide . setXMunFim ( \"Anapolis\" ); ide . setUFFim ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . valueOf ( \"GO\" )); ide . setRetira ( \"1\" ); ide . setIndIEToma ( \"1\" ); TCTe . InfCte . Ide . Toma3 toma3 = new TCTe . InfCte . Ide . Toma3 (); toma3 . setToma ( \"3\" ); ide . setToma3 ( toma3 ); infCTe . setIde ( ide ); TCTe . InfCte . Compl compl = new TCTe . InfCte . Compl (); compl . setXObs ( \"FORMA DE PAGAMENTO DEPOSITO BANCARIO,FAVOR ENVIAR COPIA DO COMPROVANTE PARA O TRANSPORTADOR E ANEXAR VIA A DA CONTABILIDADE\" ); infCTe . setCompl ( compl ); TCTe . InfCte . Emit emit = new TCTe . InfCte . Emit (); emit . setCNPJ ( cnpj ); emit . setIE ( \"104519304\" ); emit . setXNome ( \"TRC TRANSPORTES LTDA\" ); emit . setXFant ( \"TRC TRANSPORTES LTDA\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndeEmi enderEmit = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndeEmi (); enderEmit . setXLgr ( \"AV SANTO ANTONIO & CIA\" ); enderEmit . setNro ( \"0\" ); enderEmit . setXCpl ( \"QD 17 LT 01-02-03\" ); enderEmit . setXBairro ( \"PQ STO ANTONIO\" ); enderEmit . setCMun ( \"5219753\" ); enderEmit . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderEmit . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUFSemEX . valueOf ( \"GO\" )); enderEmit . setCEP ( \"72900000\" ); enderEmit . setFone ( \"6233215175\" ); emit . setEnderEmit ( enderEmit ); infCTe . setEmit ( emit ); TCTe . InfCte . Rem rem = new TCTe . InfCte . Rem (); rem . setCNPJ ( \"01241994000605\" ); rem . setIE ( \"103255788\" ); rem . setXNome ( \"CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\" ); rem . setEmail ( \"samuel@autocomsistemas.com.br\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco enderRem = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco (); enderRem . setXLgr ( \"Rua: Teste\" ); enderRem . setNro ( \"0\" ); enderRem . setXBairro ( \"TESTE\" ); enderRem . setCMun ( \"5219753\" ); enderRem . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderRem . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . GO ); enderRem . setCEP ( \"75120683\" ); enderRem . setCPais ( \"1058\" ); enderRem . setXPais ( \"Brasil\" ); rem . setEnderReme ( enderRem ); infCTe . setRem ( rem ); TCTe . InfCte . Dest dest = new TCTe . InfCte . Dest (); dest . setCNPJ ( \"07826959000120\" ); dest . setIE ( \"104024585\" ); dest . setXNome ( \"CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\" ); dest . setEmail ( \"samuel@autocomsistemas.com.br\" ); br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco enderDest = new br . com . swconsultoria . cte . schema_300 . enviCTe . TEndereco (); enderDest . setXLgr ( \"Rua: Teste\" ); enderDest . setNro ( \"0\" ); enderDest . setXBairro ( \"TESTE\" ); enderDest . setCMun ( \"5219753\" ); enderDest . setXMun ( \"SANTO ANTONIO DO DESCOBERTO\" ); enderDest . setUF ( br . com . swconsultoria . cte . schema_300 . enviCTe . TUf . GO ); enderDest . setCEP ( \"75120683\" ); enderDest . setCPais ( \"1058\" ); enderDest . setXPais ( \"Brasil\" ); dest . setEnderDest ( enderDest ); infCTe . setDest ( dest ); TCTe . InfCte . VPrest prest = new TCTe . InfCte . VPrest (); prest . setVTPrest ( \"410.00\" ); prest . setVRec ( \"410.00\" ); TCTe . InfCte . VPrest . Comp comp = new TCTe . InfCte . VPrest . Comp (); comp . setVComp ( \"500.00\" ); comp . setXNome ( \"TESTE\" ); prest . getComp (). add ( comp ); infCTe . setVPrest ( prest ); TCTe . InfCte . Imp imp = new TCTe . InfCte . Imp (); br . com . swconsultoria . cte . schema_300 . enviCTe . TImp icms = new br . com . swconsultoria . cte . schema_300 . enviCTe . TImp (); br . com . swconsultoria . cte . schema_300 . enviCTe . TImp . ICMS45 icms45 = new br . com . swconsultoria . cte . schema_300 . enviCTe . TImp . ICMS45 (); icms45 . setCST ( \"40\" ); icms . setICMS45 ( icms45 ); imp . setICMS ( icms ); infCTe . setImp ( imp ); TCTe . InfCte . InfCTeNorm infCTeNorm = new TCTe . InfCte . InfCTeNorm (); TCTe . InfCte . InfCTeNorm . InfCarga infCarga = new TCTe . InfCte . InfCTeNorm . InfCarga (); infCarga . setVCarga ( \"29100.00\" ); infCarga . setProPred ( \"OLEO DIESEL\" ); TCTe . InfCte . InfCTeNorm . InfCarga . InfQ infQ = new TCTe . InfCte . InfCTeNorm . InfCarga . InfQ (); infQ . setCUnid ( \"04\" ); infQ . setTpMed ( \"LT\" ); infQ . setQCarga ( \"10000.0000\" ); infCarga . getInfQ (). add ( infQ ); TCTe . InfCte . InfCTeNorm . InfDoc infDoc = new TCTe . InfCte . InfCTeNorm . InfDoc (); TCTe . InfCte . InfCTeNorm . InfDoc . InfNFe infNFe = new TCTe . InfCte . InfCTeNorm . InfDoc . InfNFe (); infNFe . setChave ( \"52170101241994000605550030002868271002045403\" ); infDoc . getInfNFe (). add ( infNFe ); TCTe . InfCte . InfCTeNorm . InfModal infModal = new TCTe . InfCte . InfCTeNorm . InfModal (); infModal . setVersaoModal ( ConstantesCte . VERSAO . CTE ); Rodo rodo = new Rodo (); rodo . setRNTRC ( \"47008950\" ); infModal . setAny ( ObjetoCTeUtil . objectToElement ( rodo , Rodo . class , \"rodo\" )); infCTeNorm . setInfCarga ( infCarga ); infCTeNorm . setInfDoc ( infDoc ); infCTeNorm . setInfModal ( infModal ); infCTe . setInfCTeNorm ( infCTeNorm ); // Monta EnviCte TEnviCTe enviCTe = new TEnviCTe (); enviCTe . setVersao ( ConstantesCte . VERSAO . CTE ); enviCTe . setIdLote ( \"1\" ); cte . setInfCte ( infCTe ); enviCTe . getCTe (). add ( cte ); // MOnta e Assina o XML enviCTe = Cte . montaCte ( config , enviCTe , true ); //Adiciona QRCode TCTe . InfCTeSupl infCTeSupl = new TCTe . InfCTeSupl (); infCTeSupl . setQrCodCTe ( ObjetoCTeUtil . criaQRCode ( cte . getInfCte (). getId (). substring ( 3 ), config )); enviCTe . getCTe (). get ( 0 ). setInfCTeSupl ( infCTeSupl ); // Envia a Cte para a Sefaz TRetEnviCTe retorno = Cte . enviarCte ( config , enviCTe ); if ( ! retorno . getCStat (). equals ( StatusCteEnum . LOTE_RECEBIDO . getCodigo ())) { throw new CteException ( \"Status:\" + retorno . getCStat () + \" - Motivo:\" + retorno . getXMotivo ()); } String recibo = retorno . getInfRec (). getNRec (); br . com . swconsultoria . cte . schema_300 . retConsReciCTe . TRetConsReciCTe retornoCte ; while ( true ) { retornoCte = Cte . consultaRecibo ( config , recibo ); if ( retornoCte . getCStat (). equals ( \"105\" )) { System . out . println ( \"Lote Em Processamento, vai tentar novamente apos 2 Segundo.\" ); Thread . sleep ( 2000 ); } else { break ; } } if ( ! retornoCte . getCStat (). equals ( StatusCteEnum . LOTE_PROCESSADO . getCodigo ())) { throw new CteException ( \"Status:\" + retornoCte . getCStat () + \" - \" + retornoCte . getXMotivo ()); } System . out . println ( \"Status: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getCStat () + \" - \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getXMotivo ()); System . out . println ( \"Data: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getDhRecbto ()); if ( retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getCStat (). equals ( StatusCteEnum . AUTORIZADO . getCodigo ())) { System . out . println ( \"Protocolo: \" + retornoCte . getProtCTe (). get ( 0 ). getInfProt (). getNProt ()); System . out . println ( \"XML Final: \" + XmlCteUtil . criaCteProc ( enviCTe , retornoCte . getProtCTe (). get ( 0 ))); } } catch ( Exception e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Envio"},{"location":"tutorial/inutilizacao/","text":"Inutiliza\u00e7\u00e3o Fun\u00e7\u00e3o para Inutilizar faixa de n\u00fameros da Cte. InutilizarCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.inf.portalfiscal.cte.schema_300.inutCTe.TInutCTe ; import br.inf.portalfiscal.cte.schema_300.retInutCTe.TRetInutCTe ; /** * @author Samuel Oliveira * */ public class InutilizarCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String numeroInicial = \"000005566\" ; // TODO Preencha Numera\u00e7\u00e3o Inicial Com 9 Digitos e 0 a esquerda String numeroFinal = \"000005566\" ; // TODO Preencha Numera\u00e7\u00e3o Final Com 9 Digitos e 0 a esquerda String cnpj = \"\" ; // TODO Preencha Cnpj String serie = \"1\" ; // TODO Preencha Serie String modelo = \"57\" ; // TODO Preencha MOdelo String id = \"ID\" + config . getEstado (). getCodigoIbge () + cnpj + modelo + \"00\" + serie + numeroInicial + numeroFinal ; String ano = \"17\" ; // TODO Preencha Ano String justificativa = \"Teste na Inutilizacao da Cte\" ; // TODO Preencha Justificativa TInutCTe inutCTe = new TInutCTe (); inutCTe . setVersao ( config . getVersao ()); TInutCTe . InfInut infInut = new TInutCTe . InfInut (); infInut . setId ( id ); infInut . setTpAmb ( config . getAmbiente ()); infInut . setXServ ( ConstantesCte . EVENTOS . INUTILIZAR ); infInut . setCUF ( config . getEstado (). getCodigoIbge ()); infInut . setAno ( Short . parseShort ( ano )); infInut . setCNPJ ( cnpj ); infInut . setMod ( modelo ); infInut . setSerie ( serie ); infInut . setNCTIni ( Integer . valueOf ( numeroInicial ). toString ()); infInut . setNCTFin ( Integer . valueOf ( numeroFinal ). toString ()); infInut . setXJust ( justificativa ); inutCTe . setInfInut ( infInut ); TRetInutCTe retorno = Cte . inutilizacao ( inutCTe , true ); br . inf . portalfiscal . cte . schema_300 . retInutCTe . TRetInutCTe . InfInut infRetorno = retorno . getInfInut (); System . out . println ( \"Status:\" + infRetorno . getCStat ()); System . out . println ( \"Motivo:\" + infRetorno . getXMotivo ()); System . out . println ( \"Data:\" + infRetorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Inutiliza\u00e7\u00e3o"},{"location":"tutorial/inutilizacao/#inutilizacao","text":"Fun\u00e7\u00e3o para Inutilizar faixa de n\u00fameros da Cte. InutilizarCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.com.samuelweb.cte.util.ConstantesCte ; import br.inf.portalfiscal.cte.schema_300.inutCTe.TInutCTe ; import br.inf.portalfiscal.cte.schema_300.retInutCTe.TRetInutCTe ; /** * @author Samuel Oliveira * */ public class InutilizarCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); String numeroInicial = \"000005566\" ; // TODO Preencha Numera\u00e7\u00e3o Inicial Com 9 Digitos e 0 a esquerda String numeroFinal = \"000005566\" ; // TODO Preencha Numera\u00e7\u00e3o Final Com 9 Digitos e 0 a esquerda String cnpj = \"\" ; // TODO Preencha Cnpj String serie = \"1\" ; // TODO Preencha Serie String modelo = \"57\" ; // TODO Preencha MOdelo String id = \"ID\" + config . getEstado (). getCodigoIbge () + cnpj + modelo + \"00\" + serie + numeroInicial + numeroFinal ; String ano = \"17\" ; // TODO Preencha Ano String justificativa = \"Teste na Inutilizacao da Cte\" ; // TODO Preencha Justificativa TInutCTe inutCTe = new TInutCTe (); inutCTe . setVersao ( config . getVersao ()); TInutCTe . InfInut infInut = new TInutCTe . InfInut (); infInut . setId ( id ); infInut . setTpAmb ( config . getAmbiente ()); infInut . setXServ ( ConstantesCte . EVENTOS . INUTILIZAR ); infInut . setCUF ( config . getEstado (). getCodigoIbge ()); infInut . setAno ( Short . parseShort ( ano )); infInut . setCNPJ ( cnpj ); infInut . setMod ( modelo ); infInut . setSerie ( serie ); infInut . setNCTIni ( Integer . valueOf ( numeroInicial ). toString ()); infInut . setNCTFin ( Integer . valueOf ( numeroFinal ). toString ()); infInut . setXJust ( justificativa ); inutCTe . setInfInut ( infInut ); TRetInutCTe retorno = Cte . inutilizacao ( inutCTe , true ); br . inf . portalfiscal . cte . schema_300 . retInutCTe . TRetInutCTe . InfInut infRetorno = retorno . getInfInut (); System . out . println ( \"Status:\" + infRetorno . getCStat ()); System . out . println ( \"Motivo:\" + infRetorno . getXMotivo ()); System . out . println ( \"Data:\" + infRetorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Inutiliza\u00e7\u00e3o"},{"location":"tutorial/status-servico/","text":"Status de Servi\u00e7o Fun\u00e7\u00e3o para consultar o Status de Servi\u00e7o Da Sefaz. StatusCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.inf.portalfiscal.cte.schema_300.retConsStatServCTe.TRetConsStatServ ; /** * @author Samuel Oliveira */ public class StatusCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); TRetConsStatServ retorno = Cte . statusServico (); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Data:\" + retorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Status de Servi\u00e7o Sefaz"},{"location":"tutorial/status-servico/#status-de-servico","text":"Fun\u00e7\u00e3o para consultar o Status de Servi\u00e7o Da Sefaz. StatusCte.java import br.com.samuelweb.certificado.exception.CertificadoException ; import br.com.samuelweb.cte.Cte ; import br.com.samuelweb.cte.dom.ConfiguracoesIniciais ; import br.com.samuelweb.cte.exception.CteException ; import br.inf.portalfiscal.cte.schema_300.retConsStatServCTe.TRetConsStatServ ; /** * @author Samuel Oliveira */ public class StatusCte { public static void main ( String [] args ) { try { //Veja https://github.com/Samuel-Oliveira/Java_CTe/wiki/Configura%C3%A7%C3%B5es-CTe ConfiguracoesIniciais config = ConfigTeste . iniciaConfiguracoes (); TRetConsStatServ retorno = Cte . statusServico (); System . out . println ( \"Status:\" + retorno . getCStat ()); System . out . println ( \"Motivo:\" + retorno . getXMotivo ()); System . out . println ( \"Data:\" + retorno . getDhRecbto ()); } catch ( CteException | CertificadoException e ) { System . out . println ( \"Erro:\" + e . getMessage ()); } } }","title":"Status de Servi\u00e7o"}]}